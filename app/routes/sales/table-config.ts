import type { TableConfig } from "~/lib/types/data-table";
import { formatDisplayValue } from "~/lib/utils";
import { renderOrderActions } from "./sales-actions";

export const salesTableConfig: TableConfig = {
  columns: [
    {
      accessor: "actions",
      header: "Ações",
      type: "text",
      sortable: false,
      filterable: false,
      width: "120px",
      renderCell: renderOrderActions,
      virtual: true,
    },
    {
      accessor: "id",
      header: "ID",
      type: "text",
      sortable: true,
      filterable: true,
      width: "80px",
    },
    {
      accessor: "customer__name",
      displayAccessor: "additional_info.customer_name",
      header: "Cliente",
      type: "text",
      sortable: true,
      filterable: true,
    },
    {
      accessor: "store__name",
      displayAccessor: "additional_info.store_name",
      header: "Loja",
      type: "text",
      sortable: true,
      filterable: true,
    },
    {
      accessor: "seller__name",
      displayAccessor: "additional_info.seller_name",
      header: "Vendedor",
      type: "text",
      sortable: true,
      filterable: true,
    },
    {
      accessor: "status",
      header: "Status",
      type: "text",
      sortable: true,
      filterable: true,
    },
    {
      accessor: "payment_method",
      header: "Método de Pagamento",
      type: "text",
      sortable: true,
      filterable: true,
    },
    {
      accessor: "number_of_installments",
      header: "Parcelas",
      type: "number",
      sortable: true,
      filterable: true,
      width: "100px",
    },
    {
      accessor: "total_value",
      header: "Valor Total",
      type: "number",
      sortable: true,
      filterable: true,
      formatFn: (value) => formatDisplayValue(value, "currency"),
    },
    {
      accessor: "is_invoice_generated",
      header: "Nota Fiscal Gerada",
      type: "boolean",
      sortable: true,
      filterable: true,
      formatFn: (value) => formatDisplayValue(value, "boolean"),
    },
    {
      accessor: "sale_date",
      header: "Data da Venda",
      type: "date",
      sortable: true,
      filterable: true,
      formatFn: (value) => formatDisplayValue(value, "date"),
    },
    {
      accessor: "created_at",
      header: "Criado em",
      type: "datetime",
      sortable: true,
      filterable: true,
      formatFn: (value) => formatDisplayValue(value, "datetime"),
    },
    {
      accessor: "updated_at",
      header: "Atualizado em",
      type: "datetime",
      sortable: true,
      filterable: true,
      formatFn: (value) => formatDisplayValue(value, "datetime"),
    },
    {
      accessor: "created_by__email",
      displayAccessor: "additional_info.created_by",
      header: "Criado por",
      type: "text",
      sortable: true,
      filterable: true,
    },
    {
      accessor: "additional_info.total_qty_itens",
      header: "Qtd. Itens",
      type: "number",
      sortable: false,
      filterable: false,
    },
  ],
  endpoint: {
    url: "/api/orders/",
    sortParam: "ordering",
    pageParam: "cursor",
    limitParam: "limit",
    params: {
      format: "json",
    },
  },
  initialSort: {
    id: "created_at",
    desc: true,
  },
  defaultPageSize: 20,
};
